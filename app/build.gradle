apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

//apk publish automation
buildscript {

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.github.triplet.gradle:play-publisher:1.2.2'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.4'
    }
}

apply plugin: 'com.github.triplet.play'

// Load keystore
/*def keystorePropertiesFile = rootProject.file("/opt/JetBrains/TeamCity/buildAgent/work/keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

play {
    track = 'internal'
    serviceAccountEmail = keystoreProperties['serviceEmail']
    pk12File = file(keystoreProperties['p12keyFile'])
}*/

android {

    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    def versionPropsFile = file('version.properties')  //maintains version number of apk
    def value = 0
    Properties versionProps = new Properties()
    if (!versionPropsFile.exists()) {                  //create if does not exist
        versionProps['VERSION_PATCH'] = "0"
        versionProps['VERSION_NUMBER'] = "0"
        versionProps['VERSION_BUILD'] = "-1" // I set it to minus one so the first build is 0 which isn't super important.
        versionProps.store(versionPropsFile.newWriter(), null)
    }

    def runTasks = gradle.startParameter.taskNames
    if ('publishApkRelease' in runTasks) {  //check is release build is getting executed
        value = 1
    }

    def mVersionName = ""
    def mFileName = ""

    if (versionPropsFile.canRead()) {
        versionProps.load(new FileInputStream(versionPropsFile))

        //increase build number every time build happens
        //increase version number and patch number only in case of release build

        versionProps['VERSION_PATCH'] = (versionProps['VERSION_PATCH'].toInteger() + value).toString()
        versionProps['VERSION_NUMBER'] = (versionProps['VERSION_NUMBER'].toInteger() + value).toString()
        versionProps['VERSION_BUILD'] = (versionProps['VERSION_BUILD'].toInteger() + 1).toString()

        versionProps.store(versionPropsFile.newWriter(), null)

        // 1: change major and minor version here
        mVersionName = "v9.0.${versionProps['VERSION_PATCH']}"
        // 2: change AppName for your app name
        mFileName = "AB-Music-${mVersionName}.apk"

        defaultConfig {
            applicationId 'com.bhandari.music'
            minSdkVersion 14
            targetSdkVersion 28
            versionCode versionProps['VERSION_NUMBER'].toInteger()
            versionName "${mVersionName} Build: ${versionProps['VERSION_BUILD']}"
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        }

    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }

    //rename apk files
    if ('assembleRelease' in runTasks) {
        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                if (output.outputFile != null && output.outputFile.name.endsWith('.apk')) {
                    outputFileName = mFileName
                }
            }
        }
    }

    //does not need, at least for now
    //task copyApkFiles(type: Copy){
    //    from 'build/outputs/apk/release'
    //    into '../apk'
    //    include mFileName
    //}

    //afterEvaluate {
    //    assembleRelease.doLast {
    //        tasks.copyApkFiles.execute()
    //    }
    //}


    signingConfigs{
        /*release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }*/
    }

    buildTypes {
        release {
            //signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            multiDexEnabled false
        }

        debug{
            applicationIdSuffix ".dev"
            multiDexEnabled true
        }
    }

    lintOptions{
        abortOnError = false
        disable 'MissingTranslation'
    }

    dataBinding {
        enabled = true
    }

    kapt {
        generateStubs = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:28.0.0'
    //noinspection GradleCompatible
    implementation 'com.android.support:support-v4:28.0.0'
    //noinspection GradleCompatible
    implementation 'com.android.support:design:28.0.0'
    //noinspection GradleCompatible
    implementation 'com.android.support:cardview-v7:28.0.0'
    testImplementation 'junit:junit:4.12'

    //small animations for lyric loading
    implementation 'com.wang.avi:library:2.1.3'

    //slide up panel for now playing view
    implementation 'com.sothree.slidinguppanel:library:3.3.1'

    //shake detection
    implementation 'com.squareup:seismic:1.0.2'

    //glide
    //noinspection GradleDependency
    implementation 'com.github.bumptech.glide:glide:3.7.0'

    //blur images
    implementation 'jp.wasabeef:blurry:2.1.0'

    //scroll smoothly and fast scroll
    implementation 'com.nshmura:snappysmoothscroller:1.0.0'
    implementation 'com.simplecityapps:recyclerview-fastscroll:1.0.16'

    //jsoup and okhttp
    implementation 'org.jsoup:jsoup:1.9.2'
    implementation 'com.squareup.okhttp:okhttp:2.7.5'

    //first time info bubbles
    implementation 'com.getkeepsafe.taptargetview:taptargetview:1.9.1'

    //shine animation after clicking fav
    implementation 'com.sackcentury:shinebutton:0.1.7'

    //dialogs
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'

    //firebase
    implementation 'com.google.firebase:firebase-ads:17.1.2'
    implementation 'com.google.firebase:firebase-core:16.0.6'
    implementation 'com.google.android.gms:play-services-auth:16.0.1'
    implementation 'com.google.firebase:firebase-messaging:17.3.4'
    implementation 'com.google.firebase:firebase-database:16.0.5'
    implementation 'com.google.firebase:firebase-invites:16.0.6'
    implementation 'com.google.firebase:firebase-storage:16.0.5'
    implementation 'com.google.firebase:firebase-config:16.1.2'

    //gson
    implementation 'com.google.code.gson:gson:2.8.5'

    //leak detection
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    //crop images
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.6.0'

    //view binding
    implementation 'com.jakewharton:butterknife:8.8.1'
    kapt 'com.jakewharton:butterknife-compiler:8.8.1'

    //font
    implementation 'uk.co.chrisjenx:calligraphy:2.3.0'

    //flow layout
    implementation 'com.google.android:flexbox:1.0.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

repositories {
    maven {
        url 'https://maven.google.com'
    }
    mavenCentral()
}
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.getkeepsafe.dexcount'
